# Generated by Django 3.0.7 on 2020-08-31 21:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('1', 'HDO'), ('2', 'staff'), ('3', 'student')], default='1', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendance_date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClassMoyen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ClassPrimary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ClassSecondary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Courses',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Degrey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DegreyCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('nomberetud', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('nomberexist', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('femail', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reatrap', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DegreyMoyen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DegreyMoyenCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('nomberetud', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('nomberexist', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('femail', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reatrap', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DegreyPrem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='DegreyPremCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=200, null=True)),
                ('nomberetud', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('nomberexist', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('femail', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('reatrap', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Moyen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('codeonec', models.PositiveSmallIntegerField()),
                ('codelocal', models.PositiveSmallIntegerField()),
                ('address', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SessionYearModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_stat_year', models.DateField()),
                ('session_end_year', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Subjects',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject_name', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Courses')),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Students',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('gender', models.CharField(max_length=200)),
                ('profile_pic', models.ImageField(blank=1, null=1, upload_to='')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('admin', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('course_id', models.ForeignKey(default=1, on_delete=django.db.models.deletion.DO_NOTHING, to='student.Courses')),
                ('session_year_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.SessionYearModel')),
            ],
        ),
        migrations.CreateModel(
            name='Staffs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Spesial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('degrey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Degrey')),
            ],
        ),
        migrations.CreateModel(
            name='Secondary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('codeonec', models.PositiveSmallIntegerField()),
                ('codelocal', models.PositiveSmallIntegerField()),
                ('address', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withprimary', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Primary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('codeonec', models.PositiveSmallIntegerField()),
                ('codelocal', models.PositiveSmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withuser', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OtherActiv',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titel', models.CharField(max_length=2000)),
                ('note', models.TextField(max_length=2000)),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Secondary')),
                ('withcompany2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
                ('withcompany3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Primary')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Students')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Staffs')),
            ],
        ),
        migrations.CreateModel(
            name='MotabaSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('behaviorism', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('familial', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('psychological', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('healthy', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Secondary')),
            ],
        ),
        migrations.CreateModel(
            name='MotabaPre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study', models.PositiveSmallIntegerField()),
                ('behaviorism', models.PositiveSmallIntegerField()),
                ('familial', models.PositiveSmallIntegerField()),
                ('psychological', models.PositiveSmallIntegerField()),
                ('healthy', models.PositiveSmallIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student.Primary')),
            ],
        ),
        migrations.CreateModel(
            name='MotabaMoy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('study', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('behaviorism', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('familial', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('psychological', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('healthy', models.PositiveSmallIntegerField(blank=1, null=1)),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
            ],
        ),
        migrations.CreateModel(
            name='Mostachar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datenes', models.DateTimeField(blank=True, null=True)),
                ('stat', models.CharField(blank=True, max_length=200, null=True)),
                ('spesialte', models.CharField(blank=True, max_length=200, null=True)),
                ('universti', models.CharField(blank=True, max_length=200, null=True)),
                ('firstdate', models.DateTimeField(blank=True, null=True)),
                ('firstdateinsector', models.DateTimeField(blank=True, null=True)),
                ('email', models.EmailField(blank=True, max_length=200, null=True)),
                ('phone1', models.CharField(blank=True, max_length=200, null=True)),
                ('phone2', models.CharField(blank=True, max_length=200, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('companystate1', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Secondary')),
                ('companystate2', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
                ('companystate3', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Primary')),
                ('withuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MediaSecParnt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomberesteda', models.PositiveIntegerField()),
                ('nomberhodor', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('update_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withdegraycomp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyPremCompany')),
            ],
        ),
        migrations.CreateModel(
            name='MediaSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomberhisas', models.SmallIntegerField()),
                ('date', models.DateTimeField(auto_now_add=True, null=1)),
                ('update_at', models.DateTimeField(auto_now_add=True, null=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('degraycomany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyCompany')),
            ],
        ),
        migrations.CreateModel(
            name='MediaPreParnt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomberesteda', models.PositiveIntegerField()),
                ('nomberhodor', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Primary')),
                ('withdegry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyPrem')),
            ],
        ),
        migrations.CreateModel(
            name='MediaPre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomberhisas', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyPremCompany')),
            ],
        ),
        migrations.CreateModel(
            name='MediaMoyParnt',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomberesteda', models.PositiveIntegerField()),
                ('nomberhodor', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
                ('withdegry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyMoyen')),
            ],
        ),
        migrations.CreateModel(
            name='MediaMoy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomberhisas', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withclass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyMoyenCompany')),
            ],
        ),
        migrations.CreateModel(
            name='ListeningCells',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat', models.CharField(choices=[('0', 'غير منصبة'), ('1', 'منصبة')], default='0', max_length=20)),
                ('why', models.TextField(blank=1, max_length=500, null=1)),
                ('date', models.DateField(blank=1, null=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student.Secondary')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRaportStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Students')),
            ],
        ),
        migrations.CreateModel(
            name='LeaveRaportStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('leave_date', models.CharField(max_length=255)),
                ('leave_message', models.TextField()),
                ('leave_status', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Staffs')),
            ],
        ),
        migrations.CreateModel(
            name='Followcommit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stat', models.CharField(choices=[('0', 'غير منصبة'), ('1', 'منصبة')], default='0', max_length=20)),
                ('why', models.TextField(blank=1, max_length=500, null=1)),
                ('date', models.DateTimeField(blank=1, null=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
            ],
        ),
        migrations.CreateModel(
            name='FileMediaSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField()),
                ('titel', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Secondary')),
                ('withdegry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Degrey')),
            ],
        ),
        migrations.CreateModel(
            name='FileMediaMoy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveIntegerField()),
                ('titel', models.PositiveIntegerField()),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
                ('withdegry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.DegreyMoyen')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_replay', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Students')),
            ],
        ),
        migrations.CreateModel(
            name='FeedBackStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feedback', models.CharField(max_length=255)),
                ('feedback_replay', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('staff_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Staffs')),
            ],
        ),
        migrations.CreateModel(
            name='DirectingSec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wafi', models.CharField(max_length=200)),
                ('tawziestbiyan', models.CharField(max_length=200)),
                ('esteglalestbiyan', models.CharField(max_length=200)),
                ('tawzieragbat', models.CharField(max_length=200)),
                ('dirastragbat', models.CharField(max_length=200)),
                ('tawjihtadriji', models.CharField(max_length=200)),
                ('betaktragbat', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Secondary')),
            ],
        ),
        migrations.CreateModel(
            name='DirectingMoy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wafi', models.CharField(max_length=200)),
                ('tawziestbiyan', models.CharField(max_length=200)),
                ('esteglalestbiyan', models.CharField(max_length=200)),
                ('tawzieragbat', models.CharField(max_length=200)),
                ('dirastragbat', models.CharField(max_length=200)),
                ('tawjihtadriji', models.CharField(max_length=200)),
                ('betaktragbat', models.CharField(max_length=200)),
                ('date', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withcompany', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.Moyen')),
            ],
        ),
        migrations.AddField(
            model_name='degreypremcompany',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Primary'),
        ),
        migrations.AddField(
            model_name='degreypremcompany',
            name='withdegrey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.DegreyPrem'),
        ),
        migrations.AddField(
            model_name='degreymoyencompany',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Moyen'),
        ),
        migrations.AddField(
            model_name='degreymoyencompany',
            name='withdegrey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.DegreyMoyen'),
        ),
        migrations.AddField(
            model_name='degreycompany',
            name='company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Secondary'),
        ),
        migrations.AddField(
            model_name='degreycompany',
            name='spesial',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Spesial'),
        ),
        migrations.AddField(
            model_name='degreycompany',
            name='withdegrey',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='student.Degrey'),
        ),
        migrations.CreateModel(
            name='AttendanceReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('attendance_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.Attendance')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.Students')),
            ],
        ),
        migrations.AddField(
            model_name='attendance',
            name='session_year_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='student.SessionYearModel'),
        ),
        migrations.AddField(
            model_name='attendance',
            name='subject_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='student.Subjects'),
        ),
        migrations.CreateModel(
            name='AdminHOD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('withuser', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='degreypremcompany',
            unique_together={('withdegrey', 'company')},
        ),
        migrations.AlterUniqueTogether(
            name='degreymoyencompany',
            unique_together={('withdegrey', 'company')},
        ),
        migrations.AlterUniqueTogether(
            name='degreycompany',
            unique_together={('withdegrey', 'company', 'spesial')},
        ),
    ]
